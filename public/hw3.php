<?php
// 1. С помощью цикла while вывести все числа в промежутке от 0 до 100, которые делятся на 3 без остатка.
$a = 0;
while ($a < 100) {
	$b = $a % 3;
	if ($b == 0) {
		echo "число $a делится на 3 без остатка. Проверка: $b <br/>";
	}
	$a++;
}
// 2. С помощью цикла do…while написать функцию для вывода чисел от 0 до 10, чтобы результат выглядел так:
// 	0 – ноль.
// 	1 – нечетное число.
// 	2 – четное число.
// 	3 – нечетное число.
// 	…
// 	10 – четное число.
function score()
{
	$a = 0;
	do {
		if ($a > 0 && $a % 2 == 0) {
			echo "$a - четное число<br/>";
		} elseif ($a == 0) {
			echo "$a - ноль<br/>";
		} else {
			echo "$a - нечетное число<br/>";
		};
		$a++;
	} while ($a < 10);
}
$result = score();

// 3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из соответствующей области. Вывести в цикле значения массива, чтобы результат был таким:
// Московская область:
// Москва, Зеленоград, Клин
// Ленинградская область:
// Санкт-Петербург, Всеволожск, Павловск, Кронштадт
// Рязанская область … (названия городов можно найти на maps.yandex.ru)

$cities = [
	'Московская область' => ['Москва', 'Зеленоград', 'Клин'],
	'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'],
	'Рязанская область' => ['Шилово', 'Михайлов', 'Касимов']
];

foreach ($cities as $key => $value) {
	echo "$key:<br/>";
	foreach ($value as $intvalue) {
		if ($intvalue == end($value)) {
			echo "$intvalue<br/>";
		} else {
			echo "$intvalue, ";
		}
	}
}

// 4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’).
// Написать функцию транслитерации строк.

function transliterate(string $word): string
{
	$dictionary = [
		'а' => 'a',
		'б' => 'b',
		'в' => 'v',
		'г' => 'g',
		'д' => 'd',
		'е' => 'e',
		'ё' => 'ye',
		'ж' => 'zh',
		'з' => 'z',
		'и' => 'i',
		'й' => 'y',
		'к' => 'k',
		'л' => 'l',
		'м' => 'm',
		'н' => 'n',
		'о' => 'o',
		'п' => 'p',
		'р' => 'r',
		'о' => 'o',
		'с' => 's',
		'т' => 't',
		'у' => 'u',
		'ф' => 'f',
		'х' => 'kh',
		'ц' => 'ts',
		'ч' => 'ch',
		'ш' => 'sh',
		'щ' => 'shch',
		'ъ' => '',
		'ы' => 'y',
		'ь' => '',
		'э' => 'e',
		'ю' => 'yu',
		'я' => 'ya'
	];

	$engWord = mb_strtolower($word);
	$engWord = preg_split('#(?<!^)(?!$)#u', $engWord);

	foreach ($engWord as $key => $value) {
			foreach($dictionary as $dkey => $dValue) {
				if ($value == $dkey) {
					$engWord[$key] = $dValue;
				}
			}
	}

	return $engWord = implode('', $engWord);
	
}
echo(transliterate("Какашулька"));
echo("<br/>");

// 5. Написать функцию, которая заменяет в строке пробелы на подчеркивания и возвращает видоизмененную строчку.

function str_underscore(string $str): string 
{
	return str_replace(" ", "_", $str);
}

echo(str_underscore("Ка ка шу ль ка"));
echo("<br/>");

// 6. В имеющемся шаблоне сайта заменить статичное меню (ul – li) на генерируемое через PHP. Необходимо представить пункты меню как элементы массива и вывести их циклом. Подумать, как можно реализовать меню с вложенными подменю? Попробовать его реализовать.

// см. файл "hw1.4.php"

// 7. *Вывести с помощью цикла for числа от 0 до 9, не используя тело цикла. Выглядеть должно так:
// 	for (…){ // здесь пусто}

function somethingLikeThis($wow) {
	echo($wow);
	return ++$wow;
}
for ($i = 0; $i < 10; $i = somethingLikeThis($i)) {}

// 8. *Повторить третье задание, но вывести на экран только города, начинающиеся с буквы «К».

$cities = [
	'Московская область' => ['Москва', 'Зеленоград', 'Клин'],
	'Ленинградская область' => ['Санкт-Петербург', 'Всеволожск', 'Павловск', 'Кронштадт'],
	'Рязанская область' => ['Шилово', 'Михайлов', 'Касимов']
];

foreach ($cities as $key => $value) {
	echo "<br/>$key:<br/>";
	foreach ($value as $intvalue) {
		if (mb_substr($intvalue, 0, 1) == "К") {
			echo "$intvalue ";
		}
	}
}

// 9. *Объединить две ранее написанные функции в одну, которая получает строку на русском языке, производит транслитерацию и замену пробелов на подчеркивания (аналогичная задача решается при конструировании url-адресов на основе названия статьи в блогах).

function workPlease(string $string): string 
{
	$string = transliterate($string);
	return str_underscore($string);
}

echo(workPlease("А кто такие фиксики большой большой секрет"));